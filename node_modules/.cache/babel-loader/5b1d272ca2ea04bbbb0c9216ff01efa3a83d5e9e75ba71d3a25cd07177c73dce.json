{"ast":null,"code":"var _jsxFileName = \"/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/components/PeriodFilter.js\",\n  _s = $RefreshSig$();\n// src/components/PeriodFilter.js\nimport React, { useState } from 'react';\nimport { Button, ButtonGroup } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeriodFilter = ({\n  onFilterChange\n}) => {\n  _s();\n  const [selected, setSelected] = useState('Tous');\n  const handleClick = period => {\n    setSelected(period);\n    const today = new Date();\n    let startDate = '';\n    let endDate = '';\n    if (period === 'Jour') {\n      startDate = today.toISOString().split('T')[0];\n      endDate = today.toISOString().split('T')[0];\n    } else if (period === 'Semaine') {\n      const day = today.getDay();\n      const diffToMonday = day === 0 ? -6 : 1 - day;\n      const monday = new Date(today);\n      monday.setDate(today.getDate() + diffToMonday);\n      const sunday = new Date(monday);\n      sunday.setDate(monday.getDate() + 6);\n      startDate = monday.toISOString().split('T')[0];\n      endDate = sunday.toISOString().split('T')[0];\n    } else if (period === 'Mois') {\n      const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);\n      const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n      startDate = firstDay.toISOString().split('T')[0];\n      endDate = lastDay.toISOString().split('T')[0];\n    } else if (period === 'Année') {\n      const firstDay = new Date(today.getFullYear(), 0, 1);\n      const lastDay = new Date(today.getFullYear(), 11, 31);\n      startDate = firstDay.toISOString().split('T')[0];\n      endDate = lastDay.toISOString().split('T')[0];\n    }\n    onFilterChange({\n      period,\n      startDate,\n      endDate\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    variant: \"contained\",\n    sx: {\n      mb: 2\n    },\n    children: ['Tous', 'Jour', 'Semaine', 'Mois', 'Année'].map(p => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleClick(p),\n      color: selected === p ? 'primary' : 'inherit',\n      children: p\n    }, p, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PeriodFilter, \"WeDpZbpd1sKRE/FgyRgLmR/CHWM=\");\n_c = PeriodFilter;\nexport default PeriodFilter;\nvar _c;\n$RefreshReg$(_c, \"PeriodFilter\");","map":{"version":3,"names":["React","useState","Button","ButtonGroup","jsxDEV","_jsxDEV","PeriodFilter","onFilterChange","_s","selected","setSelected","handleClick","period","today","Date","startDate","endDate","toISOString","split","day","getDay","diffToMonday","monday","setDate","getDate","sunday","firstDay","getFullYear","getMonth","lastDay","variant","sx","mb","children","map","p","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/components/PeriodFilter.js"],"sourcesContent":["// src/components/PeriodFilter.js\nimport React, { useState } from 'react';\nimport { Button, ButtonGroup } from '@mui/material';\n\nconst PeriodFilter = ({ onFilterChange }) => {\n  const [selected, setSelected] = useState('Tous');\n\n  const handleClick = (period) => {\n    setSelected(period);\n    const today = new Date();\n    let startDate = '';\n    let endDate = '';\n    if (period === 'Jour') {\n      startDate = today.toISOString().split('T')[0];\n      endDate = today.toISOString().split('T')[0];\n    } else if (period === 'Semaine') {\n      const day = today.getDay();\n      const diffToMonday = day === 0 ? -6 : 1 - day;\n      const monday = new Date(today);\n      monday.setDate(today.getDate() + diffToMonday);\n      const sunday = new Date(monday);\n      sunday.setDate(monday.getDate() + 6);\n      startDate = monday.toISOString().split('T')[0];\n      endDate = sunday.toISOString().split('T')[0];\n    } else if (period === 'Mois') {\n      const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);\n      const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n      startDate = firstDay.toISOString().split('T')[0];\n      endDate = lastDay.toISOString().split('T')[0];\n    } else if (period === 'Année') {\n      const firstDay = new Date(today.getFullYear(), 0, 1);\n      const lastDay = new Date(today.getFullYear(), 11, 31);\n      startDate = firstDay.toISOString().split('T')[0];\n      endDate = lastDay.toISOString().split('T')[0];\n    }\n    onFilterChange({ period, startDate, endDate });\n  };\n\n  return (\n    <ButtonGroup variant=\"contained\" sx={{ mb: 2 }}>\n      {['Tous', 'Jour', 'Semaine', 'Mois', 'Année'].map((p) => (\n        <Button \n          key={p} \n          onClick={() => handleClick(p)} \n          color={selected === p ? 'primary' : 'inherit'}>\n          {p}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n};\n\nexport default PeriodFilter;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}