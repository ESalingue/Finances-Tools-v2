{"ast":null,"code":"var _jsxFileName = \"/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/components/BalanceCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BalanceCard = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const fetchBalance = async () => {\n    try {\n      // Appel sans filtre pour obtenir le solde global\n      const res = await api.get('/transactions/balance');\n      setBalance(res.data.balance);\n    } catch (err) {\n      console.error('Erreur lors du chargement du solde', err.response ? err.response.data : err.message);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [refreshTrigger]); // se rafraîchit dès que refreshTrigger change\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Solde actuel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [balance.toFixed(2), \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(BalanceCard, \"5z9vn1tf3i7PD8oiH3Wp686MfIE=\");\n_c = BalanceCard;\nexport default BalanceCard;\nvar _c;\n$RefreshReg$(_c, \"BalanceCard\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","api","jsxDEV","_jsxDEV","BalanceCard","refreshTrigger","_s","balance","setBalance","fetchBalance","res","get","data","err","console","error","response","message","sx","mb","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/components/BalanceCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport api from '../services/api';\n\nconst BalanceCard = ({ refreshTrigger }) => {\n  const [balance, setBalance] = useState(0);\n\n  const fetchBalance = async () => {\n    try {\n      // Appel sans filtre pour obtenir le solde global\n      const res = await api.get('/transactions/balance');\n      setBalance(res.data.balance);\n    } catch (err) {\n      console.error(\n        'Erreur lors du chargement du solde',\n        err.response ? err.response.data : err.message\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [refreshTrigger]); // se rafraîchit dès que refreshTrigger change\n\n  return (\n    <Card sx={{ mb: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\">Solde actuel</Typography>\n        <Typography variant=\"h4\">{balance.toFixed(2)} EUR</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BalanceCard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,GAAG,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,uBAAuB,CAAC;MAClDH,UAAU,CAACE,GAAG,CAACE,IAAI,CAACL,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CACX,oCAAoC,EACpCF,GAAG,CAACG,QAAQ,GAAGH,GAAG,CAACG,QAAQ,CAACJ,IAAI,GAAGC,GAAG,CAACI,OACzC,CAAC;IACH;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEF,OAAA,CAACL,IAAI;IAACoB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eAClBjB,OAAA,CAACJ,WAAW;MAAAqB,QAAA,gBACVjB,OAAA,CAACH,UAAU;QAACqB,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAClDtB,OAAA,CAACH,UAAU;QAACqB,OAAO,EAAC,IAAI;QAAAD,QAAA,GAAEb,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACnB,EAAA,CA5BIF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}