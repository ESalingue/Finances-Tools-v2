{"ast":null,"code":"var _jsxFileName = \"/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Container, Box, Snackbar, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { AuthContext } from '../context/AuthContext';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\nimport ChartDashboard from '../components/ChartDashboard';\nimport PeriodFilter from '../components/PeriodFilter';\nimport BalanceCard from '../components/BalanceCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    logout,\n    token\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [transactions, setTransactions] = useState([]);\n  const [filter, setFilter] = useState({\n    period: 'Tous',\n    startDate: '',\n    endDate: ''\n  });\n  const [balanceRefreshTrigger, setBalanceRefreshTrigger] = useState(0);\n\n  // État pour gérer les notifications\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const fetchTransactions = async () => {\n    try {\n      const params = {};\n      if (filter.period !== 'Tous') {\n        params.startDate = filter.startDate;\n        params.endDate = filter.endDate;\n      }\n      const res = await api.get('/transactions', {\n        params\n      });\n      setTransactions(res.data);\n    } catch (err) {\n      console.error('Erreur lors du chargement des transactions', err.response ? err.response.data : err.message);\n      setNotification({\n        open: true,\n        message: \"Erreur lors du chargement des transactions\",\n        severity: \"error\"\n      });\n    }\n  };\n\n  // Nouvelle fonction qui rafraîchit transactions ET le solde global\n  const refreshData = async () => {\n    await fetchTransactions();\n    setBalanceRefreshTrigger(prev => prev + 1);\n  };\n  useEffect(() => {\n    if (token) {\n      fetchTransactions();\n    }\n  }, [token, filter]);\n  const addTransaction = async transactionData => {\n    try {\n      const res = await api.post('/transactions', transactionData);\n      setTransactions([res.data, ...transactions]);\n      // Mise à jour du solde global après ajout\n      setBalanceRefreshTrigger(prev => prev + 1);\n      setNotification({\n        open: true,\n        message: \"Transaction ajoutée avec succès\",\n        severity: \"success\"\n      });\n    } catch (err) {\n      console.error('Erreur lors de l’ajout de la transaction', err.response ? err.response.data : err.message);\n      setNotification({\n        open: true,\n        message: \"Erreur lors de l’ajout de la transaction\",\n        severity: \"error\"\n      });\n    }\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n    setNotification({\n      open: true,\n      message: \"Déconnexion réussie\",\n      severity: \"info\"\n    });\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n  };\n  const handleNotificationClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Gestion d'argent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: \"D\\xE9connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(BalanceCard, {\n        refreshTrigger: balanceRefreshTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PeriodFilter, {\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Ajouter une transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n          addTransaction: addTransaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Statistiques\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartDashboard, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Transactions r\\xE9centes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n          transactions: transactions,\n          refreshTransactions: refreshData,\n          setNotification: setNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleNotificationClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      } // Position en haut à droite\n      ,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleNotificationClose,\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"MnfTarDjFbeHnp1yNXaUGIT4FAg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AppBar","Toolbar","Typography","Button","Container","Box","Snackbar","Alert","useNavigate","api","AuthContext","TransactionForm","TransactionList","ChartDashboard","PeriodFilter","BalanceCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","logout","token","navigate","transactions","setTransactions","filter","setFilter","period","startDate","endDate","balanceRefreshTrigger","setBalanceRefreshTrigger","notification","setNotification","open","message","severity","fetchTransactions","params","res","get","data","err","console","error","response","refreshData","prev","addTransaction","transactionData","post","handleLogout","handleFilterChange","newFilter","handleNotificationClose","event","reason","children","position","variant","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","mt","refreshTrigger","onFilterChange","mb","gutterBottom","refreshTransactions","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/home/tenka/Documents/REACT/Finances/gestion-dargent-frontend-v2/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Container, Box, Snackbar, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { AuthContext } from '../context/AuthContext';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\nimport ChartDashboard from '../components/ChartDashboard';\nimport PeriodFilter from '../components/PeriodFilter';\nimport BalanceCard from '../components/BalanceCard';\n\nconst Dashboard = () => {\n  const { logout, token } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [transactions, setTransactions] = useState([]);\n  const [filter, setFilter] = useState({ period: 'Tous', startDate: '', endDate: '' });\n  const [balanceRefreshTrigger, setBalanceRefreshTrigger] = useState(0);\n  \n  // État pour gérer les notifications\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'success' });\n\n  const fetchTransactions = async () => {\n    try {\n      const params = {};\n      if (filter.period !== 'Tous') {\n        params.startDate = filter.startDate;\n        params.endDate = filter.endDate;\n      }\n      const res = await api.get('/transactions', { params });\n      setTransactions(res.data);\n    } catch (err) {\n      console.error(\n        'Erreur lors du chargement des transactions',\n        err.response ? err.response.data : err.message\n      );\n      setNotification({ open: true, message: \"Erreur lors du chargement des transactions\", severity: \"error\" });\n    }\n  };\n\n  // Nouvelle fonction qui rafraîchit transactions ET le solde global\n  const refreshData = async () => {\n    await fetchTransactions();\n    setBalanceRefreshTrigger(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    if (token) {\n      fetchTransactions();\n    }\n  }, [token, filter]);\n\n  const addTransaction = async (transactionData) => {\n    try {\n      const res = await api.post('/transactions', transactionData);\n      setTransactions([res.data, ...transactions]);\n      // Mise à jour du solde global après ajout\n      setBalanceRefreshTrigger(prev => prev + 1);\n      setNotification({ open: true, message: \"Transaction ajoutée avec succès\", severity: \"success\" });\n    } catch (err) {\n      console.error(\n        'Erreur lors de l’ajout de la transaction',\n        err.response ? err.response.data : err.message\n      );\n      setNotification({ open: true, message: \"Erreur lors de l’ajout de la transaction\", severity: \"error\" });\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n    setNotification({ open: true, message: \"Déconnexion réussie\", severity: \"info\" });\n  };\n\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n  };\n\n  const handleNotificationClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setNotification(prev => ({ ...prev, open: false }));\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Gestion d'argent\n          </Typography>\n          <Button color=\"inherit\" onClick={handleLogout}>Déconnexion</Button>\n        </Toolbar>\n      </AppBar>\n      <Container sx={{ mt: 4 }}>\n        <BalanceCard refreshTrigger={balanceRefreshTrigger} />\n        <PeriodFilter onFilterChange={handleFilterChange} />\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>Ajouter une transaction</Typography>\n          <TransactionForm addTransaction={addTransaction} />\n        </Box>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h5\" gutterBottom>Statistiques</Typography>\n          <ChartDashboard transactions={transactions} />\n        </Box>\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Transactions récentes</Typography>\n          {/* Passage de refreshData pour rafraîchir à la fois transactions et solde */}\n          <TransactionList transactions={transactions} refreshTransactions={refreshData} setNotification={setNotification} />\n        </Box>\n      </Container>\n      <Snackbar \n        open={notification.open} \n        autoHideDuration={6000} \n        onClose={handleNotificationClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}  // Position en haut à droite\n      >\n        <Alert onClose={handleNotificationClose} severity={notification.severity} sx={{ width: '100%' }}>\n          {notification.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}